function [resultsTab] = calculateResults(infos, classifyResults, timeResults, numIterationsPerEpoch)

numRepeat = size(infos, 2);

    results = struct(...
        'epochs', cell(1, numRepeat), ...
        'iterations', cell(1, numRepeat), ...
        'finalValidationLoss', cell(1, numRepeat), ...
        'finalValidationAccuracy', cell(1, numRepeat), ...
        'losoValidation', cell(1, numRepeat), ...
        'timeResult', cell(1, numRepeat), ...
        'vLossMean', cell(1, numRepeat), ...
        'vLossMin', cell(1, numRepeat), ...
        'vLossMedian', cell(1, numRepeat), ...
        'vLossMax', cell(1, numRepeat), ...
        'vLossStd', cell(1, numRepeat), ...
        'vAccuracyMean', cell(1, numRepeat), ...
        'vAccuracyMin', cell(1, numRepeat), ...
        'vAccuracyMedian', cell(1, numRepeat), ...
        'vAccuracyMax', cell(1, numRepeat), ...
        'vAccuracyStd', cell(1, numRepeat), ...
        'tLossMean', cell(1, numRepeat), ...
        'tLossMin', cell(1, numRepeat), ...
        'tLossMedian', cell(1, numRepeat), ...
        'tLossMax', cell(1, numRepeat), ...
        'tLossStd', cell(1, numRepeat), ...
        'tAccuracyMean', cell(1, numRepeat), ...
        'tAccuracyMin', cell(1, numRepeat), ...
        'tAccuracyMedian', cell(1, numRepeat), ...
        'tAccuracyMax', cell(1, numRepeat), ...
        'tAccuracyStd', cell(1, numRepeat));


    for i = 1:numRepeat
        results(i).epochs = size(infos(i).ValidationLoss, 2) / numIterationsPerEpoch;
        results(i).iterations = size(infos(i).ValidationLoss, 2);
        results(i).finalValidationLoss = infos(i).FinalValidationLoss;
        results(i).finalValidationAccuracy = infos(i).FinalValidationAccuracy;
        results(i).losoValidation = classifyResults(i);
        results(i).vLossMean = mean(infos(i).ValidationLoss, 'omitnan');
        results(i).vLossMin = min(infos(i).ValidationLoss);
        results(i).vLossMedian = median(infos(i).ValidationLoss, 'omitnan');
        results(i).vLossMax = max(infos(i).ValidationLoss);
        results(i).vLossStd = std(infos(i).ValidationLoss, 'omitnan');
        results(i).vAccuracyMean = mean(infos(i).ValidationAccuracy, 'omitnan');
        results(i).vAccuracyMin = min(infos(i).ValidationAccuracy);
        results(i).vAccuracyMedian = median(infos(i).ValidationAccuracy, 'omitnan');
        results(i).vAccuracyMax = max(infos(i).ValidationAccuracy);
        results(i).vAccuracyStd = std(infos(i).ValidationAccuracy, 'omitnan');
        results(i).tLossMean = mean(infos(i).TrainingLoss);
        results(i).tLossMin = min(infos(i).TrainingLoss);
        results(i).tLossMedian = median(infos(i).TrainingLoss);
        results(i).tLossMax = max(infos(i).TrainingLoss);
        results(i).tLossStd = std(infos(i).TrainingLoss);
        results(i).tAccuracyMean = mean(infos(i).TrainingAccuracy);
        results(i).tAccuracyMin = min(infos(i).TrainingAccuracy);
        results(i).tAccuracyMedian = median(infos(i).TrainingAccuracy);
        results(i).tAccuracyMax = max(infos(i).TrainingAccuracy);
        results(i).tAccuracyStd = std(infos(i).TrainingAccuracy);
        results(i).timeResult = timeResults(i);
    end
    
    resultsTab = struct2table(results);
end